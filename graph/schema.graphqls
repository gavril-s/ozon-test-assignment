type User {
  id: ID!
  name: String!
}

type ContentMeta {
  author: User!
  publishedAt: String!
}

type Post {
  id: ID!
  title: String!
  contentMeta: ContentMeta!
  content: String!
  commentsEnabled: Boolean!
  comments(first: Int, after: String): CommentConnection!
}

type PostSnippet {
  postId: ID!
  title: String!
  contentMeta: ContentMeta!
  contentSnippet(length: Int): String!
}

type PostSnippetConnection {
  edges: [PostSnippetEdge!]!
  pageInfo: PageInfo!
}

type PostSnippetEdge {
  cursor: String!
  node: PostSnippet!
}

type Comment {
  id: ID!
  postId: ID!
  parentId: ID
  contentMeta: ContentMeta!
  content: String!
}

type CommentConnection {
  edges: [CommentEdge!]!
  pageInfo: PageInfo!
}

type CommentEdge {
  cursor: String!
  node: Comment!
}

type PageInfo {
  endCursor: String!
  hasNextPage: Boolean!
}

type Query {
  posts(first: Int, after: String): [PostSnippetConnection!]!
  post(id: ID!, commentsFirst: Int, commentsAfter: String): Post
}

type Mutation {
  createPost(title: String!, author: String!, content: String!, commentsEnabled: Boolean!): Post!
  createComment(postId: ID!, parentId: ID, author: String!, content: String!): Comment!
}

type Subscription {
  commentAdded(postId: ID!): Comment!
}
